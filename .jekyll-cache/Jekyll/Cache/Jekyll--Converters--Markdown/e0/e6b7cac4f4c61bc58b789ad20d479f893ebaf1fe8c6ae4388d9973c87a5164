I"±<p>So far in our series, we‚Äôve <a href="https://daveabrock.com/2020/10/26/blast-off-blazor-intro">walked through the intro</a>, <a href="https://daveabrock.com/2020/10/28/blast-off-blazor-404-page">wrote our first component</a>, <a href="https://daveabrock.com/2020/11/08/blast-off-blazor-update-head">dynamically updated the HTML head from a component</a>, and <a href="https://daveabrock.com/2020/11/22/blast-off-blazor-service-dependencies">isolated our service dependencies</a>, and worked on <a href="https://daveabrock.com/2020/12/13/blast-off-blazor-cosmos">hosting our images over Azure Blob Storage and Cosmos DB</a>.</p>

<p>Now, we‚Äôre going to query Cosmos DB, fetch our images, and display them in an image gallery. We‚Äôll learn how to reuse components and pass parameters to methods.</p>

<p>After we work on this post, we‚Äôll enhance the page in future posts, with:</p>

<ul>
  <li>Enabling the ‚Äúinfinite scrolling‚Äù feature with Blazor virtualization</li>
  <li>Filter and query images</li>
  <li>Create a dialog to learn more and see the image in a larger size</li>
</ul>

<p>This post contains the following content.</p>

<h1 id="a-quick-primer">A quick primer</h1>

<p>If you haven‚Äôt been with us for the whole series, we‚Äôre building a Blazor Web Assembly app hosted with Azure Static Web Apps at <em>blastoffwithblazor.com</em>. We‚Äôve copied images from the NASA APOD API (all 25 years!) to Azure Blob Storage, and are storing the image metadata in a serverless Cosmos DB instance. Feel free to read those links to learn more.</p>

<p>With the images in place, we‚Äôre going to build this image gallery. It‚Äôs responsive and will look good o</p>

<h1 id="wrap-up">Wrap up</h1>

:ET